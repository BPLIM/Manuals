Bootstrap: docker
From: ubuntu:20.04
IncludeCmd: yes


%files
  #/mnt/cephfs/colaborativo/DEE-BPLIM-Filial/containers/cran_key.txt


%environment
  R_VERSION=4.2.0
  export R_VERSION
  R_CONFIG_DIR=/etc/R/
  export R_CONFIG_DIR
  export LC_ALL=C
  export PATH=$PATH
  TZ=Europe/Lisbon


%labels
  Author Gustavo IglÃ©sias, Miguel Portela and Rita Sousa -- BPLIM
  Version v0.0.1: R + RStudio for researchers + Python + Jupyter Lab
  R_Version 4.0.4
  build_date 2022 June 16


%post

  apt update && apt-get update && DEBIAN_FRONTEND="noninteractive" TZ="Europe/London" apt-get -y install apt-transport-https apt-utils software-properties-common dirmngr curl wget python3-pip python3-dev python3-tk pandoc xkb-data x11-apps bzip2 qt5-default mesa-utils libgl1-mesa-dev libgl1-mesa-glx libegl1-mesa libxrandr2 libxss1 libxcursor1 libxcomposite1 libasound2 libxi6 libxtst6 iproute2 swig build-essential libnss3 net-tools unixodbc-dev git vim krb5-user libncurses5 libxml2-dev libsasl2-dev libldap2-dev libssl-dev libnlopt-dev gnupg gnupg2 unixodbc gfortran nano cmake libblas3 libblas-dev liblapack-dev liblapack3 aptitude xorg-dev libreadline-dev libpcre3-dev liblzma-dev libbz2-dev libcurl4-openssl-dev libmagick++-dev libhdf5-dev hdf5-helpers gsl-bin libgsl-dev libgsl23 libgslcblas0 libgdal-dev libproj-dev libnss3


  # Install Python Packages

	apt install -y python3-pip
	python3 -m pip install -U pip
	python3 -m pip install -U setuptools

	pip3 install pandas numpy matplotlib plotly statistics statsmodels seaborn


  # Node.js + npm

    apt-get update
    apt update
    apt install nodejs -y
    apt install npm -y
    nodejs --version
    npm --version

    npm cache clean -f
    npm install -g n
    n stable


  # Python Environment

    pip3 install pipenv
    pip3 install pew
    pip3 install PySimpleGUI==4.32.1 clipboard==0.0.4 pyperclip==1.8.1
    echo "source \$(pew shell_config)" >> /etc/bash.bashrc
    ln -s /usr/lib/x86_64-linux-gnu/libodbc.so /usr/lib/libodbc.so


  # Install Microsoft SQL Server ODBC driver

    curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
    curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list > /etc/apt/sources.list.d/mssql-release.list
    apt-get update && ACCEPT_EULA=Y apt-get install -y msodbcsql17

    
  # R

    apt-get update && apt update && apt update -qq

    wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
    add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"
        
    apt-get update && apt-get install -y --no-install-recommends r-base r-base-core r-base-dev r-recommended

  # RStudio
    
    wget https://download1.rstudio.org/desktop/bionic/amd64/rstudio-2022.02.3-492-amd64.deb
    apt -y install -f ./rstudio-2022.02.3-492-amd64.deb
    rm rstudio-2022.02.3-492-amd64.deb

  # INSTALL R PACKAGES

	R --slave -e 'install.packages(c("devtools"))'
	R --slave -e 'install.packages(c("tidyverse","haven"))'
	R --slave -e 'install.packages("censReg",dependencies=TRUE)'
	R --slave -e 'install.packages(c("nloptr","lme4","pbkrtest","effects","car","dynlm","systemfit"),dependencies=TRUE)'
	R --slave -e 'install.packages("AER",dependencies=TRUE)'
  R --slave -e 'install.packages(c("margins","sampleSelection"),dependencies=TRUE)'

  # CLEAN temporary files

    apt-get update
    apt-get autoremove
    apt-get autoclean
